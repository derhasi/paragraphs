diff --git a/paragraphs.module b/paragraphs.module
index e485f1e..581431c 100644
--- a/paragraphs.module
+++ b/paragraphs.module
@@ -105,48 +105,6 @@ function paragraphs_form_field_storage_config_edit_form_alter(&$form, \Drupal\Co
 }
 
 /**
- * Implements hook_form_FORM_ID_alter().
- *
- * Indicate unsupported multilingual paragraphs field configuration.
- */
-function paragraphs_form_field_config_edit_form_alter(&$form,  \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
-  $field = $form_state->getFormObject()->getEntity();
-
-  if (!\Drupal::hasService('content_translation.manager')) {
-    return;
-  }
-
-  $bundle_is_translatable = \Drupal::service('content_translation.manager')
-    ->isEnabled($field->getTargetEntityTypeId(), $field->getTargetBundle());
-
-  if (!$bundle_is_translatable
-    || $field->getType() != 'entity_reference_revisions'
-    || $field->getSetting('target_type') != 'paragraph') {
-    return;
-  }
-
-  // This is a translatable ERR field pointing to a paragraph.
-  $message_display = 'warning';
-  $message_text = t('Paragraphs fields do not support translation. See the <a href=":documentation">online documentation</a>.', [
-    ':documentation' => Url::fromUri('https://www.drupal.org/node/2735121')
-      ->toString()
-  ]);
-
-  if ($form['translatable']['#default_value'] == TRUE) {
-    $message_display = 'error';
-  }
-
-  $form['paragraphs_message'] = array(
-    '#type' => 'container',
-    '#markup' => $message_text,
-    '#attributes' => array(
-      'class' => array('messages messages--' . $message_display),
-    ),
-    '#weight' => 0,
-  );
-}
-
-/**
  * Implements hook_module_implements_alter().
  *
  * Our paragraphs_form_field_config_edit_form_alter() needs to be run after
@@ -165,56 +123,6 @@ function paragraphs_module_implements_alter(&$implementations, $hook) {
 }
 
 /**
- * Implements hook_form_FORM_ID_alter().
- *
- * Indicate unsupported multilingual paragraphs field configuration.
- *
- * Add a warning that paragraph fields can not be translated.
- * Switch to error if a paragraph field is marked as translatable.
- */
-function paragraphs_form_language_content_settings_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
-  // Without it Paragraphs message are meaningless.
-  if (!\Drupal::hasService('content_translation.manager')) {
-    return;
-  }
-
-  $content_translation_manager = \Drupal::service('content_translation.manager');
-  $message_display = 'warning';
-  $message_text = t('(* unsupported) Paragraphs fields do not support translation. See the <a href=":documentation">online documentation</a>.', [
-    ':documentation' => Url::fromUri('https://www.drupal.org/node/2735121')
-      ->toString()]);
-  $map = \Drupal::service('entity_field.manager')->getFieldMapByFieldType('entity_reference_revisions');
-  foreach ($map as $entity_type_id => $info) {
-    if (!$content_translation_manager->isEnabled($entity_type_id)) {
-      continue;
-    }
-    $field_storage_definitions = \Drupal::service('entity_field.manager')->getFieldStorageDefinitions($entity_type_id);
-    foreach ($field_storage_definitions as $name => $data) {
-      if ($data->getSetting('target_type') && $data->getSetting('target_type') == 'paragraph') {
-        foreach($data->getBundles() as $bundle) {
-          if (!$content_translation_manager->isEnabled($entity_type_id, $bundle)) {
-            continue;
-          }
-          $form['settings'][$entity_type_id][$bundle]['fields'][$name]['#label'] .= ' (* unsupported)';
-          if ($form['settings'][$entity_type_id][$bundle]['fields'][$name]['#default_value']) {
-            $message_display = 'error';
-          }
-        }
-      }
-    }
-  }
-  $form['settings']['paragraphs_message'] = array(
-    '#type' => 'container',
-    '#markup' => $message_text,
-    '#attributes' => array(
-      'class' => array('messages messages--' . $message_display),
-    ),
-    '#weight' => 0,
-  );
-  return $form;
-}
-
-/**
  * Prepares variables for paragraph templates.
  *
  * Default template: paragraph.html.twig.
diff --git a/src/Tests/ParagraphsConfigTest.php b/src/Tests/ParagraphsConfigTest.php
index 3edf671..96c608f 100644
--- a/src/Tests/ParagraphsConfigTest.php
+++ b/src/Tests/ParagraphsConfigTest.php
@@ -61,71 +61,4 @@ class ParagraphsConfigTest extends ParagraphsTestBase {
     $this->assertText('paragraphed_test paragraphed_title has been updated.');
   }
 
-  /**
-   * Tests content translation form translatability constraints messages.
-   */
-  public function testContentTranslationForm() {
-    $this->loginAsAdmin([
-      'administer languages',
-      'administer content translation',
-      'create content translations',
-      'translate any entity',
-    ]);
-
-    // Check warning message is displayed.
-    $this->drupalGet('admin/config/regional/content-language');
-    $this->assertText('(* unsupported) Paragraphs fields do not support translation.');
-
-    $this->addParagraphedContentType('paragraphed_test', 'paragraphs_field');
-
-    // Check error message is not displayed.
-    $this->drupalGet('admin/config/regional/content-language');
-    $this->assertText('(* unsupported) Paragraphs fields do not support translation.');
-    $this->assertNoRaw('<div class="messages messages--error');
-
-    // Add a second language.
-    ConfigurableLanguage::create(['id' => 'de'])->save();
-
-    // Enable translation for paragraphed content type.
-    $edit = [
-      'entity_types[node]' => TRUE,
-      'settings[node][paragraphed_test][translatable]' => TRUE,
-      'settings[node][paragraphed_test][fields][paragraphs_field]' => FALSE,
-    ];
-    $this->drupalPostForm('admin/config/regional/content-language', $edit, t('Save configuration'));
-
-    // Check error message is still not displayed.
-    $this->drupalGet('admin/config/regional/content-language');
-    $this->assertText('(* unsupported) Paragraphs fields do not support translation.');
-    $this->assertNoRaw('<div class="messages messages--error');
-
-    // Check content type field management warning.
-    $this->drupalGet('admin/structure/types/manage/paragraphed_test/fields/node.paragraphed_test.paragraphs_field');
-    $this->assertText('Paragraphs fields do not support translation.');
-
-    // Make the paragraphs field translatable.
-    $edit = [
-      'entity_types[node]' => TRUE,
-      'settings[node][paragraphed_test][translatable]' => TRUE,
-      'settings[node][paragraphed_test][fields][paragraphs_field]' => TRUE,
-    ];
-    $this->drupalPostForm('admin/config/regional/content-language', $edit, t('Save configuration'));
-
-    // Check content type field management error.
-    $this->drupalGet('admin/structure/types/manage/paragraphed_test/fields/node.paragraphed_test.paragraphs_field');
-    $this->assertText('Paragraphs fields do not support translation.');
-    $this->assertRaw('<div class="messages messages--error');
-
-    // Check a not paragraphs translatable field does not display the message.
-    $this->drupalGet('admin/structure/types/manage/paragraphed_test/fields/add-field');
-    $edit = [
-      'new_storage_type' => 'field_ui:entity_reference:node',
-      'label' => 'new_no_paragraphs_field',
-      'field_name' => 'new_no_paragraphs_field',
-    ];
-    $this->drupalPostForm(NULL, $edit, t('Save and continue'));
-    $this->drupalPostForm(NULL, [], t('Save field settings'));
-    $this->assertNoText('Paragraphs fields do not support translation.');
-    $this->assertNoRaw('<div class="messages messages--warning');
-  }
 }
